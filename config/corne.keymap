/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <13 14 15 16 17 1 2 3 4 5 29 28 27 26 25 6 18 30 7 8 9 22 31 20 19 21 32 33 34 23 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &as Q LS(Q)  &as W LS(W)  &as F LS(F)  &as P LS(P)    &as B LS(B)    &as J LS(J)  &as L LS(L)          &as U LS(U)         &as Y LS(Y)  &as SEMICOLON LS(SEMICOLON)                &kp ESCAPE
&kp LCTRL  &as A LS(A)  &as R LS(R)  &as S LS(S)  &as T LS(T)    &as G LS(G)    &as M LS(M)  &as N LS(N)          &as E LS(E)         &as I LS(I)                  &as O LS(O)  &as SQT LS(SINGLE_QUOTE)
&kp LSHFT  &as Z LS(Z)  &as X LS(X)  &as C LS(C)  &as D LS(D)    &as V LS(V)    &as K LS(K)  &as H LS(H)  &as COMMA LS(COMMA)  &as DOT LS(PERIOD)           &as FSLH LS(SLASH)             &kp RIGHT_ALT
                                        &kp LGUI        &mo 1  &kp BACKSPACE      &kp SPACE        &mo 2            &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans         &kp F1         &kp F2         &kp F3         &kp F4         &kp F5    &kp F6    &kp F7    &kp F8  &kp F9    &kp F10  &trans
&trans  &as N1 LS(N1)  &as N2 LS(N2)  &as N3 LS(N3)  &as N4 LS(N4)  &as N5 LS(N5)    &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &as N6 LS(N6)  &as N7 LS(N7)  &as N8 LS(N8)  &as N9 LS(N9)  &as N0 LS(N0)    &trans    &trans    &trans  &trans     &trans  &trans
                                             &trans         &trans         &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };
    };
};
