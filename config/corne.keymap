/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <13 14 15 16 17 1 2 3 4 5 29 28 27 26 25 6 18 30 7 8 9 22 31 20 19 21 32 33 34 23 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &as LS(Q) Q  &as LS(W) W  &as LS(F) F  &as LS(P) P    &as LS(B) B    &as LS(J) J  &as LS(L) L          &as LS(U) U         &as LS(Y) Y  &as LS(SEMICOLON) SEMICOLON                &kp ESCAPE
&kp LCTRL  &as LS(A) A  &as LS(R) R  &as LS(S) S  &as LS(T) T    &as LS(G) G    &as LS(M) M  &as LS(N) N          &as LS(E) E         &as LS(I) I                  &as LS(O) O  &as LS(SQT) SINGLE_QUOTE
&kp LSHFT  &as LS(Z) Z  &as LS(X) X  &as LS(C) C  &as LS(D) D    &as LS(V) V    &as LS(K) K  &as LS(H) H  &as LS(COMMA) COMMA  &as LS(DOT) PERIOD           &as LS(FSLH) SLASH             &kp RIGHT_ALT
                                        &kp LGUI        &mo 1  &kp BACKSPACE      &kp SPACE        &sk 0            &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp C_VOLUME_UP         &kp F1         &kp F2          &kp F3         &kp F4         &kp F5                 &kp F6               &kp F7               &kp F8                             &kp F9                              &kp F10                   &bt BT_CLR
&kp C_VOLUME_DOWN  &as N1 LS(N1)  &as N2 LS(N2)   &as N3 LS(N3)  &as N4 LS(N4)  &as N5 LS(N5)    &as MINUS LS(MINUS)  &as EQUAL LS(EQUAL)  &as GRAVE LS(GRAVE)  &as LEFT_BRACKET LS(LEFT_BRACKET)  &as RIGHT_BRACKET LS(RIGHT_BRACKET)  &as BACKSLASH LS(BACKSLASH)
       &kp K_MUTE  &as N6 LS(N6)  &as N7 LS(N7)   &as N8 LS(N8)  &as N9 LS(N9)  &as N0 LS(N0)             &bt BT_PRV             &kp LEFT             &kp DOWN                             &kp UP                            &kp RIGHT                   &bt BT_NXT
                                                 &kp C_PREVIOUS         &trans         &trans                 &trans               &trans           &kp C_NEXT
            >;
        };
    };
};
